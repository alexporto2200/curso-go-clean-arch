

services:
  postgres:
    image: postgres:17-alpine
    container_name: curso-go-clean-arch-postgres
    environment:
      POSTGRES_DB: orders_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: curso-go-clean-arch-app
    ports:
      - "8080:8080"  # GraphQL
      - "8081:8081"  # REST API
      - "8082:8082"  # gRPC
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=orders_db
      - DB_SSLMODE=disable
      - GRAPHQL_PORT=8080
      - REST_PORT=8081
      - GRPC_PORT=8082
      - ENV=production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
